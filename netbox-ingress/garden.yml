kind: Module
type: helm
name: netbox-ingress
skipDeploy: ${var.disable_oidc_auth}
dependencies:
  - netbox
  - vouch-proxy
  - netbox-app-infra
values:
   ingress:
    annotations:
      cert-manager.io/issuer: "${environment.name == 'prod' ? 'letsencrypt-prod' : 'letsencrypt-staging'}"
      nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      nginx.ingress.kubernetes.io/auth-signin: https://${runtime.services.netbox-app-infra.outputs.vouch_host}/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err
      nginx.ingress.kubernetes.io/auth-snippet: |
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
      nginx.ingress.kubernetes.io/auth-url: https://${runtime.services.netbox-app-infra.outputs.vouch_host}/validate
      nginx.ingress.kubernetes.io/configuration-snippet: |
        auth_request_set $auth_resp_x_vouch_groups $upstream_http_x_vouch_idp_claims_groups;
        access_by_lua_block {
          ngx.req.set_header("X-Vouch-Groups",  string.gsub(ngx.var.auth_resp_x_vouch_groups, "\"", ""))
        }
    host: ${runtime.services.netbox-app-infra.outputs.netbox_host}
    serviceName: ${modules.netbox.outputs.release-name}
    logoutAnnotations:
        nginx.ingress.kubernetes.io/rewrite-target: https://${runtime.services.netbox-app-infra.outputs.vouch_host}/logout
    tls:
     - secretName: netbox-tls
       hosts:
         - ${runtime.services.netbox-app-infra.outputs.netbox_host}
